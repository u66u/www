{
  "title": "Simple Game of Life simulation in Python",
  "publishedAt": "2022-12-16",
  "category": "Python",
  "body": {
    "raw": "\n\n\n```\nimport pygame\nimport numpy as np\n\n# Initialize pygame and create window\npygame.init()\nsize = width, height = 800, 800\nscreen = pygame.display.set_mode(size)\n\n# Create a numpy array to store the game state\ngame_state = np.random.randint(2, size=(width//10, height//10))\n\ndef update_game_state(game_state):\n    # Create a copy of the game state to update\n    new_game_state = np.copy(game_state)\n\n    # Iterate over each cell in the game state\n    for i in range(game_state.shape[0]):\n        for j in range(game_state.shape[1]):\n            # Count the number of live neighbors for the current cell\n            live_neighbors = count_live_neighbors(game_state, i, j)\n\n            # Apply the rules of Conway's Game of Life\n            if game_state[i, j] == 1:\n                if live_neighbors < 2 or live_neighbors > 3:\n                    new_game_state[i, j] = 0\n            else:\n                if live_neighbors == 3:\n                    new_game_state[i, j] = 1\n\n    return new_game_state\n\ndef count_live_neighbors(game_state, i, j):\n    count = 0\n    for x in range(-1, 2):\n        for y in range(-1, 2):\n            if x == 0 and y == 0:\n                continue\n            if i+x < 0 or i+x >= game_state.shape[0] or j+y < 0 or j+y >= game_state.shape[1]:\n                continue\n            if game_state[i+x, j+y] == 1:\n                count += 1\n    return count\n\n# Main game loop\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n\n    # Clear the screen\n    screen.fill((0, 0, 0))\n\n    # Draw the current game state\n    for i in range(game_state.shape[0]):\n        for j in range(game_state.shape[1]):\n            if game_state[i, j] == 1:\n                pygame.draw.rect(screen, (199, 238, 199), (i*10, j*10, 10, 10))\n\n    # Update the game state\n    game_state = update_game_state(game_state)\n\n    # Update the display\n    pygame.display.flip()\n    pygame.time.wait(40)\n\n# Close pygame when the game loop exits\npygame.quit()\n```\n\nOutput:\n\n",
    "code": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var g=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),N=(e,a)=>{for(var l in a)c(e,l,{get:a[l],enumerable:!0})},i=(e,a,l,t)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let s of h(a))!x.call(e,s)&&s!==l&&c(e,s,{get:()=>a[s],enumerable:!(t=y(a,s))||t.enumerable});return e};var _=(e,a,l)=>(l=e!=null?p(m(e)):{},i(a||!e||!e.__esModule?c(l,\"default\",{value:e,enumerable:!0}):l,e)),u=e=>i(c({},\"__esModule\",{value:!0}),e);var r=g((C,d)=>{d.exports=_jsx_runtime});var b={};N(b,{default:()=>w,frontmatter:()=>f});var n=_(r()),f={title:\"Simple Game of Life simulation in Python\",publishedAt:\"2022-12-16\",category:\"Python\"};function o(e){let a=Object.assign({div:\"div\",pre:\"pre\",code:\"code\",span:\"span\",p:\"p\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(a.pre,{className:\"poimandres\",style:{backgroundColor:\"#1b1e28\"},tabIndex:\"0\",\"data-language\":\"\",\"data-theme\":\"default\",children:(0,n.jsxs)(a.code,{\"data-language\":\"\",\"data-theme\":\"default\",style:{display:\"grid\"},children:[(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"import pygame\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"import numpy as np\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"# Initialize pygame and create window\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"pygame.init()\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"size = width, height = 800, 800\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"screen = pygame.display.set_mode(size)\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"# Create a numpy array to store the game state\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"game_state = np.random.randint(2, size=(width//10, height//10))\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"def update_game_state(game_state):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    # Create a copy of the game state to update\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    new_game_state = np.copy(game_state)\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    # Iterate over each cell in the game state\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    for i in range(game_state.shape[0]):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"        for j in range(game_state.shape[1]):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            # Count the number of live neighbors for the current cell\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            live_neighbors = count_live_neighbors(game_state, i, j)\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            # Apply the rules of Conway's Game of Life\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            if game_state[i, j] == 1:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                if live_neighbors < 2 or live_neighbors > 3:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                    new_game_state[i, j] = 0\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            else:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                if live_neighbors == 3:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                    new_game_state[i, j] = 1\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    return new_game_state\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"def count_live_neighbors(game_state, i, j):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    count = 0\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    for x in range(-1, 2):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"        for y in range(-1, 2):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            if x == 0 and y == 0:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                continue\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            if i+x < 0 or i+x >= game_state.shape[0] or j+y < 0 or j+y >= game_state.shape[1]:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                continue\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            if game_state[i+x, j+y] == 1:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                count += 1\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    return count\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"# Main game loop\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"running = True\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"while running:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    for event in pygame.event.get():\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"        if event.type == pygame.QUIT:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            running = False\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    # Clear the screen\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    screen.fill((0, 0, 0))\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    # Draw the current game state\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    for i in range(game_state.shape[0]):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"        for j in range(game_state.shape[1]):\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"            if game_state[i, j] == 1:\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"                pygame.draw.rect(screen, (199, 238, 199), (i*10, j*10, 10, 10))\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    # Update the game state\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    game_state = update_game_state(game_state)\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    # Update the display\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    pygame.display.flip()\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"    pygame.time.wait(40)\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"}})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"# Close pygame when the game loop exits\"})}),`\n`,(0,n.jsx)(a.span,{className:\"syntax-line\",\"data-line\":\"\",children:(0,n.jsx)(a.span,{style:{color:\"#a6accd\"},children:\"pygame.quit()\"})})]})})}),`\n`,(0,n.jsx)(a.p,{children:\"Output:\"})]})}function j(e={}){let{wrapper:a}=e.components||{};return a?(0,n.jsx)(a,Object.assign({},e,{children:(0,n.jsx)(o,e)})):o(e)}var w=j;return u(b);})();\n;return Component;"
  },
  "_id": "snippet/Simple Game of Life simulation in Python.mdx",
  "_raw": {
    "sourceFilePath": "snippet/Simple Game of Life simulation in Python.mdx",
    "sourceFileName": "Simple Game of Life simulation in Python.mdx",
    "sourceFileDir": "snippet",
    "contentType": "mdx",
    "flattenedPath": "snippet/Simple Game of Life simulation in Python"
  },
  "type": "Snippet",
  "readingTime": {
    "text": "2 min read",
    "minutes": 1.28,
    "time": 76800,
    "words": 256
  },
  "wordCount": 258,
  "slug": "Simple Game of Life simulation in Python"
}